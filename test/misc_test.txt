

Family Test {
  type X = X1 | X2;
  
  Family Nested2 {
    type Z = Z1 | Z2
  }
  
  Family Nested {
    type Y = Y1 | Y2
    def foo: X -> Y =
      case X1 = Y1
      case X2 = Y2
      
    def bar: Nested2.Z -> Y =
      case Z1 = Y1
      case Z2 = Y2
  }
}

Family TestExt extends Test {
  type X += X3
  
  Family Nested {
    type Y += Y3
    def foo: X -> Y +=
      case X3 = Y3
  }
}
